[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\srthi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\srthi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 84.4867ms
[debug]       Load.loadUnit: defsScala took 0.2571ms
[debug] [Loading] Scanning directory C:\Users\srthi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srthi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 15.7132 ms
[debug]           Load.resolveProject(global-plugins) took 47.3558ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\srthi\.sbt\1.0\plugins, plugins: List(<none>))) took 88.2515ms
[debug] [Loading] Done in C:\Users\srthi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.6442ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.361ms
[debug]     Load.loadUnit(file:/C:/Users/srthi/.sbt/1.0/plugins/, ...) took 202.1357ms
[debug]   Load.apply: load took 342.366ms
[debug]   Load.apply: resolveProjects took 5.5499ms
[debug]   Load.apply: finalTransforms took 50.9611ms
[debug]   Load.apply: config.delegates took 7.2287ms
[debug]   Load.apply: Def.make(settings)... took 383.7266ms
[debug]   Load.apply: structureIndex took 77.6957ms
[debug]   Load.apply: mkStreams took 1.3702ms
[info] loading global plugins from C:\Users\srthi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1981.8254ms
[debug]           Load.loadUnit: plugins took 20.7215ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service\project
[debug]             Load.loadUnit: mkEval took 5.534ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.3338 ms
[info] loading settings for project logsearch-service-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(logsearch-service-build) took 2.5272ms
[debug]             Load.loadTransitive: finalizeProject(Project(id logsearch-service-build, base: E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service\project, plugins: List(<none>))) took 4.3092ms
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service\project, returning: (logsearch-service-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1886.7402ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.2141ms
[debug]         Load.loadUnit(file:/E:/MS/Fall%202021/CS%20441/Assignments/3/Experiments/logsearch-service/project/, ...) took 1911.4381ms
[debug]       Load.apply: load took 1912.6468ms
[debug]       Load.apply: resolveProjects took 0.0984ms
[debug]       Load.apply: finalTransforms took 10.8322ms
[debug]       Load.apply: config.delegates took 0.3174ms
[debug]       Load.apply: Def.make(settings)... took 71.29ms
[debug]       Load.apply: structureIndex took 30.4033ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4077.0306ms
[debug]     Load.loadUnit: defsScala took 0.0021ms
[debug] [Loading] Scanning directory E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service
[debug]       Load.loadUnit: mkEval took 0.1612ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(akka.grpc.sbt.AkkaGrpcPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(akka.grpc.sbt.AkkaGrpcPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,akka.grpc.sbt.AkkaGrpcPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbtprotoc.ProtocPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.5121 ms
[info] loading settings for project logsearch-service from build.sbt ...
[debug]         Load.resolveProject(logsearch-service) took 151.7381ms
[debug]       Load.loadTransitive: finalizeProject(Project(id logsearch-service, base: E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service, plugins: List(<none>))) took 157.7598ms
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\Experiments\logsearch-service, returning: (logsearch-service)
[debug]     Load.loadUnit: loadedProjectsRaw took 1962.871ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.457ms
[debug]   Load.loadUnit(file:/E:/MS/Fall%202021/CS%20441/Assignments/3/Experiments/logsearch-service/, ...) took 6066.977ms
[debug] Load.apply: load took 6070.6138ms
[debug] Load.apply: resolveProjects took 0.3419ms
[debug] Load.apply: finalTransforms took 72.285ms
[debug] Load.apply: config.delegates took 1.3805ms
[debug] Load.apply: Def.make(settings)... took 190.1768ms
[debug] Load.apply: structureIndex took 36.2019ms
[debug] Load.apply: mkStreams took 0.0018ms
[info] set current project to logsearch-service (in build file:/E:/MS/Fall%202021/CS%20441/Assignments/3/Experiments/logsearch-service/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61589 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61589, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to logsearch-service (in build file:/E:/MS/Fall%202021/CS%20441/Assignments/3/Experiments/logsearch-service/)
[debug] > Exec(idea-shell, None, None)
