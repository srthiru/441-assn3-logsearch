[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\srthi\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\srthi\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 11.0.12)
[debug]       Load.loadUnit: plugins took 113.5061ms
[debug]       Load.loadUnit: defsScala took 0.3299ms
[debug] [Loading] Scanning directory C:\Users\srthi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\srthi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.3205 ms
[debug]           Load.resolveProject(global-plugins) took 57.7089ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\srthi\.sbt\1.0\plugins, plugins: List(<none>))) took 108.1183ms
[debug] [Loading] Done in C:\Users\srthi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 130.9368ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2958ms
[debug]     Load.loadUnit(file:/C:/Users/srthi/.sbt/1.0/plugins/, ...) took 256.6023ms
[debug]   Load.apply: load took 421.624ms
[debug]   Load.apply: resolveProjects took 7.8015ms
[debug]   Load.apply: finalTransforms took 67.2506ms
[debug]   Load.apply: config.delegates took 8.4237ms
[debug]   Load.apply: Def.make(settings)... took 459.9662ms
[debug]   Load.apply: structureIndex took 129.8007ms
[debug]   Load.apply: mkStreams took 2.0503ms
[info] loading global plugins from C:\Users\srthi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3234.2678ms
[debug]           Load.loadUnit: plugins took 59.1759ms
[debug]           Load.loadUnit: defsScala took 0.0082ms
[debug] [Loading] Scanning directory E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest\project
[debug]             Load.loadUnit: mkEval took 10.1647ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9707 ms
[info] loading settings for project searchclientrest-build from idea.sbt ...
[debug]               Load.resolveProject(searchclientrest-build) took 20.5343ms
[debug]             Load.loadTransitive: finalizeProject(Project(id searchclientrest-build, base: E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest\project, plugins: List(<none>))) took 23.1554ms
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest\project, returning: (searchclientrest-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4481.0392ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.0918ms
[debug]         Load.loadUnit(file:/E:/MS/Fall%202021/CS%20441/Assignments/3/SearchClientRest/project/, ...) took 4545.6573ms
[debug]       Load.apply: load took 4547.3894ms
[debug]       Load.apply: resolveProjects took 0.1351ms
[debug]       Load.apply: finalTransforms took 10.5802ms
[debug]       Load.apply: config.delegates took 0.5523ms
[debug]       Load.apply: Def.make(settings)... took 115.9806ms
[debug]       Load.apply: structureIndex took 32.6692ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6771.3268ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest
[debug]       Load.loadUnit: mkEval took 0.3111ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3599 ms
[info] loading settings for project searchclientrest from build.sbt ...
[debug]         Load.resolveProject(searchclientrest) took 63.5757ms
[debug]       Load.loadTransitive: finalizeProject(Project(id searchclientrest, base: E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest, plugins: List(<none>))) took 68.9945ms
[debug] [Loading] Done in E:\MS\Fall 2021\CS 441\Assignments\3\SearchClientRest, returning: (searchclientrest)
[debug]     Load.loadUnit: loadedProjectsRaw took 2678.9463ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.3469ms
[debug]   Load.loadUnit(file:/E:/MS/Fall%202021/CS%20441/Assignments/3/SearchClientRest/, ...) took 9470.6332ms
[debug] Load.apply: load took 9473.0895ms
[debug] Load.apply: resolveProjects took 0.1511ms
[debug] Load.apply: finalTransforms took 43.4075ms
[debug] Load.apply: config.delegates took 0.4805ms
[debug] Load.apply: Def.make(settings)... took 147.2629ms
[debug] Load.apply: structureIndex took 56.3726ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to SearchClientRest (in build file:/E:/MS/Fall%202021/CS%20441/Assignments/3/SearchClientRest/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51563 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51563, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SearchClientRest (in build file:/E:/MS/Fall%202021/CS%20441/Assignments/3/SearchClientRest/)
[debug] > Exec(idea-shell, None, None)
